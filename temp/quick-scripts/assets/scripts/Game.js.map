{"version":3,"sources":["Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","btnNode","gameOverNode","scoreDisplay","Label","scoreAudio","AudioClip","animRootPrefab","onLoad","groundY","y","height","timer","starDuration","enabled","currentStar","currentAnimRoot","starPool","NodePool","scorePool","onStartGame","spawnNewStar","score","string","toString","x","getComponent","startMoveAt","v2","active","gameOver","destroy","stopAllActions","newStar","size","get","instantiate","reuse","setPosition","getNewStarPosition","node","addChild","game","Math","random","spawnAnimRoot","fx","gainScore","pos","Animation","play","audioEngine","playEffect","despawnStar","star","put","despawnAnimRoot","randX","randY","jumpHeight","maxX","width","update","dt"],"mappings":"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","file":"Game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 这个属性引用了星星预制资源\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        // 星星产生后消失时间的随机范围\n        maxStarDuration: 0,\n        minStarDuration:0,\n        // 地面节点，用于确定星星生成的高度\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n        // player 节点，用于获取主角弹跳的高度，和控制主角的行动开关\n        player: {\n            default: null,\n            type: cc.Node\n        },\n        // 游戏开始按钮节点\n        btnNode: {\n            default: null,\n            type: cc.Node\n        },\n        // 游戏结束 label 节点\n        gameOverNode: {\n            default: null,\n            type: cc.Node\n        },\n        // score label 得分引用\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n        // 得分音效资源\n        scoreAudio: {\n            default: null,\n            type: cc.AudioClip\n        },\n        // 得分动画\n        animRootPrefab: {\n            default: null,\n            type: cc.Prefab\n        }\n    },\n\n    onLoad () {\n        // 获取地面的y轴坐标\n        this.groundY = this.ground.y + this.ground.height / 2;\n        // 初始化计时器\n        this.timer = 0;\n        this.starDuration = 0;\n        // 停止update以及其他计时器\n        this.enabled = false;\n        // 生成一个新的星星\n        // this.spawnNewStar();\n        // 初始化得分\n        // this.score = 0\n        // currentStar 存储新生成的星星对象 currentStarX用于存储它的x坐标\n        this.currentStar = null;\n        this.currentAnimRoot = null;\n        // 对象池实例\n        this.starPool = new cc.NodePool('Star');\n        this.scorePool = new cc.NodePool('ScoreAnim');\n    },\n    // 游戏开始\n    onStartGame: function() {\n        // 生成星星\n        this.spawnNewStar();\n        // 初始化计分\n        this.score = 0;\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\n        // 游戏开始\n        this.enabled = true;\n        // 设置显示隐藏 开始按钮 和 gameover\n        this.btnNode.x = 3000;\n        // 更新 主角 初始化位置 和 移动速度\n        this.player.getComponent('Player').startMoveAt(cc.v2(0, this.groundY));\n        // gameOver节点\n        this.gameOverNode.active = false;\n    },\n    // 游戏结束\n    gameOver: function() {\n        this.currentStar.destroy(); // 游戏结束时 销毁屏幕上的星星\n        this.gameOverNode.active = true;\n        this.btnNode.x = 0;\n        this.player.getComponent('Player').enabled = false;\n        this.player.stopAllActions(); // 停止主角运动\n        // cc.director.loadScene('game');\n    },\n    // 星星\n    spawnNewStar: function() {\n        var newStar = null;\n        if (this.starPool.size() > 0) {\n            newStar = this.starPool.get(this);\n        } else {\n            // instantiate 克隆指定的任意对象或Prefab节点\n            newStar = cc.instantiate(this.starPrefab);\n            // 将game 注入到 star 脚本中\n            newStar.getComponent('Star').reuse(this);\n        }\n        // 将新增的节点添加到 Canvas 节点下面\n        // 为星星设置一个随机位置\n        newStar.setPosition(this.getNewStarPosition());\n        this.node.addChild(newStar);\n        // 在星星组件上暂存 Game 对象的引用 便于 写 碰撞\n        newStar.getComponent('Star').game = this;\n        // 重置计时器，根据消失时间范围随机取一个值\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n\n        this.currentStar = newStar\n    },\n\n    // 生成动画\n    spawnAnimRoot: function () {\n        var fx;\n        if (this.scorePool.size() > 0) {\n            fx = this.scorePool.get(this);\n        } else {\n            fx = cc.instantiate(this.animRootPrefab);\n            fx.getComponent('ScoreAnim').reuse(this);\n        }\n        return fx;\n    },\n    gainScore: function(pos) {\n        this.score += 1;\n        // 更新 scoreDisplay Label 的文字\n        this.scoreDisplay.string = 'Score: ' + this.score;\n        // 播放特效\n        this.currentAnimRoot = this.spawnAnimRoot();\n        this.node.addChild(this.currentAnimRoot);\n        this.currentAnimRoot.setPosition(pos);\n        this.currentAnimRoot.getComponent(cc.Animation).play('score_pop');\n        // 播放得分音效\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n\n    // 销毁 对象池 star\n    despawnStar (star) {\n        this.starPool.put(star);\n        this.spawnNewStar();\n    },\n\n    // 销毁 对象池 score 得分\n    despawnAnimRoot () {\n        this.scorePool.put(this.currentAnimRoot);\n    },\n\n    // 随机位置\n    getNewStarPosition: function() {\n        var randX = 0;\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的Y坐标\n        // getComponent 方法可以得到该节点上挂载的组件引用\n        var randY = this.groundY + Math.random() * this.player.getComponent('Player').jumpHeight + 50;\n        // 根据屏幕宽度，随机得到一个星星 的 x 坐标\n        var maxX = this.node.width / 2;\n        randX = (Math.random() - 0.5) * 2 * maxX;\n        return cc.v2(randX, randY);\n    },\n    update (dt) {\n        // 每帧更新计时器，超过限度还没有生成新的星星\n        // 就会调用游戏失败逻辑\n        if (this.timer > this.starDuration) {\n            this.gameOver();\n            return;\n        }\n        this.timer += dt;\n    }\n});\n"]}